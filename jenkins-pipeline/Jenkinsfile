node {
    try {
        stage('Preparation') {
            gitcheckOut('branch', 'repo URL')
        }
        stage('Test') {
            nodeTestContainer()
        }
        stage('docker build/push') {
            docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                containerBuild()
            }
        }
    } catch (e) {
        currentBuild.result = "FAILED"
        throw e
        slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }
}

def gitCheckThatOut(String branch, String vcsUrl) {
    branch =  branch ?: 'master'
    // checkout
    git branch: "${branch}", url: "${vcsUrl}"
    // get last tag
    sh "git describe --abbrev=0 --tags > .git/tagName"
    tagName = readFile('.git/tagName')
    echo "${tagName}"
    // set DisplayName
    currentBuild.displayName = tagName
}

def nodeTestContainer() {
    testContainer = docker.image('node:4.6')
    testContainer.pull()
    testContainer.inside {
        sh 'npm install --only=dev'
        sh 'npm test'
    }
}

def containerBuild() {
    app = docker.build("${registryName}:${commit_id}", '.').push()
}